#include <metal_stdlib>
struct VertexColorBakerIn {
    float4 position;
    float2 uv;
    float4 color;
};

struct VertexColorBakerOut {
    float4 position [[position]];
    float2 uv;
    float4 color;
};

vertex VertexColorBakerOut vertexColorBakerVertexShader(constant VertexColorBakerIn *vertices[[buffer(0)]],
                              const unsigned int vertex_id [[ vertex_id ]])
{
    VertexColorBakerOut out;
    VertexColorBakerIn in = vertices[vertex_id];
    out.position = float4(in.uv.x,in.uv.y,0,1);
    out.uv = in.uv;
    out.color = in.color;
    return out;
}

fragment half4 vertexColorBakerFragmentShader(VertexColorBakerOut in [[stage_in]]) {
    return half4(in.color.r,in.color.g,in.color.b, 1.0);
}
